#ifndef MICRO_CODE_H
#define MICRO_CODE_H

typedef enum micro_code_t{
    //BUS CONTROL
    IN_DATA,
    OUT_DATA,
    OUT_CONTROL,
    IN_CONTROL,
    SET_DATA_BUS_FROM_A,
    SET_DATA_BUS_FROM_F,
    SET_DATA_BUS_FROM_W,
    SET_DATA_BUS_FROM_Z,
    SET_DATA_BUS_FROM_B,
    SET_DATA_BUS_FROM_C,
    SET_DATA_BUS_FROM_D,
    SET_DATA_BUS_FROM_E,
    SET_DATA_BUS_FROM_H,
    SET_DATA_BUS_FROM_L,
    SET_DATA_BUS_FROM_I,
    SET_DATA_BUS_FROM_R,
    SET_DATA_BUS_FROM_TMP,
    SET_DATA_BUS_FROM_PCH,
    SET_DATA_BUS_FROM_PCL,
    SET_DATA_BUS_FROM_SPH,
    SET_DATA_BUS_FROM_SPL,
    SET_DATA_BUS_FROM_IXH,
    SET_DATA_BUS_FROM_IXL,
    SET_DATA_BUS_FROM_IYH,
    SET_DATA_BUS_FROM_IYL,
    SET_DATA_BUS_00h, // 00h
    SET_DATA_BUS_08h, // 08h
    SET_DATA_BUS_10h,
    SET_DATA_BUS_18h,
    SET_DATA_BUS_20h,
    SET_DATA_BUS_28h,
    SET_DATA_BUS_30h,
    SET_DATA_BUS_38h,
    SET_DATA_BUS_40h,
    SET_DATA_BUS_66h,

    //CONTROL
    SET_M1_TO_LOW,
    SET_M1_TO_HIGH,
    SET_MREQ_TO_LOW,
    SET_MREQ_TO_HIGH,
    SET_IORQ_TO_LOW,
    SET_IORQ_TO_HIGH,
    SET_RD_TO_LOW,
    SET_RD_TO_HIGH,
    SET_WR_TO_LOW,
    SET_WR_TO_HIGH,
    SET_RFSH_TO_LOW,
    SET_RFSH_TO_HIGH,
    SET_HALT_TO_LOW,
    SET_HALT_TO_HIGH,
    SET_BUSACK_TO_LOW,
    SET_BUSACK_TO_HIGH,


    //ALU
    ALU_INC_TMP,
    ALU_DEC_TMP,
    ALU_RLC_TMP,
    ALU_RL_TMP,
    ALU_RRC_TMP,
    ALU_RR_TMP,
    ALU_SLA_TMP,
    ALU_SRA_TMP,
    ALU_SRL_TMP,
    ALU_ADD,
    ALU_ADC,
    ALU_SUB,
    ALU_SBC,
    ALU_AND,
    ALU_OR,
    ALU_XOR,
    ALU_CPL,
    ALU_CCF,
    ALU_SCF,
    ALU_CP,
    ALU_NEG,
    ALU_RLD,
    ALU_RRD,
    ALU_TEST_TMP,
    ALU_BIT_0_TMP,
    ALU_BIT_1_TMP,
    ALU_BIT_2_TMP,
    ALU_BIT_3_TMP,
    ALU_BIT_4_TMP,
    ALU_BIT_5_TMP,
    ALU_BIT_6_TMP,
    ALU_BIT_7_TMP,
    ALU_SET_0_TMP,
    ALU_SET_1_TMP,
    ALU_SET_2_TMP,
    ALU_SET_3_TMP,
    ALU_SET_4_TMP,
    ALU_SET_5_TMP,
    ALU_SET_6_TMP,
    ALU_SET_7_TMP,
    ALU_RES_0_TMP,
    ALU_RES_1_TMP,
    ALU_RES_2_TMP,
    ALU_RES_3_TMP,
    ALU_RES_4_TMP,
    ALU_RES_5_TMP,
    ALU_RES_6_TMP,
    ALU_RES_7_TMP,
    ALU_TEST_LD_IR_TMP,
    UPDATE_FLAGS_FROM_ALU,

    //ALU FLAGS
    SET_FLAG_C0_TO_LOW,
    SET_FLAG_C0_TO_HIGH,
    SET_FLAG_N1_TO_LOW,
    SET_FLAG_N1_TO_HIGH,
    SET_FLAG_P2_TO_LOW,
    SET_FLAG_P2_TO_HIGH,
    SET_FLAG_X3_TO_LOW,
    SET_FLAG_X3_TO_HIGH,
    SET_FLAG_H4_TO_LOW,
    SET_FLAG_H4_TO_HIGH,
    SET_FLAG_Y5_TO_LOW,
    SET_FLAG_Y5_TO_HIGH,
    SET_FLAG_Z6_TO_LOW,
    SET_FLAG_Z6_TO_HIGH,
    SET_FLAG_S7_TO_LOW,
    SET_FLAG_S7_TO_HIGH,
    SAVE_FLAG_C0,
    SAVE_FLAG_N1,
    SAVE_FLAG_P2,
    SAVE_FLAG_X3,
    SAVE_FLAG_H4,
    SAVE_FLAG_Y5,
    SAVE_FLAG_Z6,
    SAVE_FLAG_S7,
    SET_FLAG_P_V_NON_ZERO_BC,


    //REGISTERS
    SET_REG_ACU,
    SET_REG_TMP,
    SET_REG_INST,
    SET_REG_A_FROM_TMP,
    SET_REG_F_FROM_TMP,
    SET_REG_W_FROM_TMP,
    SET_REG_Z_FROM_TMP,
    SET_REG_B_FROM_TMP,
    SET_REG_C_FROM_TMP,
    SET_REG_D_FROM_TMP,
    SET_REG_E_FROM_TMP,
    SET_REG_H_FROM_TMP,
    SET_REG_L_FROM_TMP,
    SET_REG_I_FROM_TMP,
    SET_REG_R_FROM_TMP,
    SET_REG_SPL_FROM_TMP,
    SET_REG_SPH_FROM_TMP,
    SET_REG_IXH_FROM_TMP,
    SET_REG_IXL_FROM_TMP,
    SET_REG_IYH_FROM_TMP,
    SET_REG_IYL_FROM_TMP,
    SET_REG_PCL_FROM_TMP,
    SET_REG_PCH_FROM_TMP,
    SET_REG_TMP_FROM_A,
    SET_REG_TMP_FROM_F,
    SET_REG_TMP_FROM_W,
    SET_REG_TMP_FROM_Z,
    SET_REG_TMP_FROM_B,
    SET_REG_TMP_FROM_C,
    SET_REG_TMP_FROM_D,
    SET_REG_TMP_FROM_E,
    SET_REG_TMP_FROM_H,
    SET_REG_TMP_FROM_L,
    SET_REG_TMP_FROM_I,
    SET_REG_TMP_FROM_R,
    SET_REG_TMP_FROM_PCL,
    SET_REG_TMP_FROM_PCH,
    SET_REG_TMP_FROM_SPL,
    SET_REG_TMP_FROM_SPH,
    SET_REG_TMP_FROM_IXH,
    SET_REG_TMP_FROM_IXL,
    SET_REG_TMP_FROM_IYH,
    SET_REG_TMP_FROM_IYL,
    SET_REG_IFF1_TO_HIGH,
    SET_REG_IFF1_TO_LOW,
    SET_REG_IFF2_TO_HIGH,
    SET_REG_IFF2_TO_LOW,
    MV_IFF2_TO_IFF1,
    SET_REG_PC_FROM_ADDRESS_BUS_,
    SET_REG_IR_FROM_ADDRESS_BUS_,
    SET_REG_HL_FROM_ADDRESS_BUS_,
    SET_REG_BC_FROM_ADDRESS_BUS_,
    SET_REG_DE_FROM_ADDRESS_BUS_,
    SET_REG_SP_FROM_ADDRESS_BUS_,
    SET_REG_IY_FROM_ADDRESS_BUS_,
    SET_REG_IX_FROM_ADDRESS_BUS_,
    SET_REG_WZ_FROM_ADDRESS_BUS_,
    EXCHANGE_DE_HL,
    EXCHANGE_AF_AF_,
    EXX,
    INC_REG_R,
    SET_REG_W_0,
    SET_REG_W_BASED_ON_ALU_S_FLAG,

    //ADDRESS
    OUT_ADDRESS_BUS,
    INC_ADDRESS_BUS,
    DEC_ADDRESS_BUS,
    ID_ADDRESS_BUS,
    SET_ADDRESS_BUS_FROM_IR,
    SET_ADDRESS_BUS_FROM_PC,
    SET_ADDRESS_BUS_FROM_HL,
    SET_ADDRESS_BUS_FROM_BC,
    SET_ADDRESS_BUS_FROM_DE,
    SET_ADDRESS_BUS_FROM_SP,
    SET_ADDRESS_BUS_FROM_WZ,
    SET_ADDRESS_BUS_FROM_IY,
    SET_ADDRESS_BUS_FROM_IX,

    //INTERNAL CONTROL
    CHECK_FOR_WAIT,
    CHECK_FOR_BUSREQ,
    CANCEL_BUSREQ_CHECK,
    CHANGE_STATE_TO_STANDARD_FETCH,
    CHANGE_STATE_TO_FETCH,
    CHANGE_STATE_TO_FETCH_NO_NMI,
    CHANGE_STATE_TO_WAIT,
    CHANGE_STATE_TO_OPCODE,
    CHANGE_STATE_TO_OPCODE_DDCB,
    CHANGE_STATE_TO_OPCODE_FDCB,
    CHANGE_STATE_TO_HALT,
    CHANGE_STATE_TO_FETCH_ED,
    CHANGE_STATE_TO_FETCH_CB,
    CHANGE_STATE_TO_FETCH_DD,
    CHANGE_STATE_TO_FETCH_DDCB,
    CHANGE_STATE_TO_FETCH_FD,
    CHANGE_STATE_TO_FETCH_FDCB,
    CHANGE_STATE_COND_NON_ZERO,
    CHANGE_STATE_COND_ZERO,
    CHANGE_STATE_COND_NON_CARRY,
    CHANGE_STATE_COND_CARRY,
    CHANGE_STATE_COND_PARITY_ODD,
    CHANGE_STATE_COND_PARITY_EVEN,
    CHANGE_STATE_COND_SIGN_POSITIVE,
    CHANGE_STATE_COND_SIGN_NEGATIVE,
    CHANGE_STATE_IF_ADDRESS_0_TO_STANDARD_FETCH,
    CHANGE_STATE_IF_P_V_0_TO_STANDARD_FETCH,
    CHANGE_STATE_IF_Z_1_TO_STANDARD_FETCH,
    SET_IM_TO_0,
    SET_IM_TO_1,
    SET_IM_TO_2,

    RESET_CPU,

    SKIP_INSTRUCTION
} micro_code_t;

#endif // MICRO_CODE_H